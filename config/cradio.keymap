#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
            layers = <0>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <0 4 20 24>;
        };

        vi_command {
            bindings = <&kp ESCAPE>;
            key-positions = <30 33>;
        };

        system_layer {
            bindings = <&mo 4>;
            key-positions = <30 31 4>;
        };
    };

    macros {
        vi_pm_down: vi_pm_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(W) &kp J>;
            label = "VI_PM_DOWN";
        };

        vi_pm_up: vi_pm_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(W) &kp K>;
            label = "VI_PM_UP";
        };

        vi_pm_left: vi_pm_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(W) &kp H>;
            label = "VI_PM_LEFT";
        };

        vi_pm_right: vi_pm_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(W) &kp L>;
            label = "VI_PM_RIGHT";
        };

        vi_switch_window: vi_switch_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(W) &kp W>;
            label = "VI_SWITCH_WINDOW";
        };

        tmux_switcher: tmux_switcher {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp S>;
            label = "TMUX_SWITCHER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_dh {
            bindings = <
&kp Q             &kp W       &kp F  &kp P        &kp B          &kp J        &kp L          &kp U      &kp Y            &kp SEMI
&mt LEFT_SHIFT A  &mt LALT R  &kp S  &mt LGUI T   &kp G          &kp M        &mt RGUI N     &kp E      &mt RIGHT_ALT I  &mt RIGHT_SHIFT O
&kp Z             &kp X       &kp C  &mt LCTRL D  &kp V          &kp K        &mt RCTRL H    &kp COMMA  &kp DOT          &kp FSLH
                                     &kp ESCAPE   &lt 2 ENTER    &lt 1 SPACE  &kp BACKSPACE
            >;
        };

        navigation {
            bindings = <
&kp LEFT_BRACE        &kp LESS_THAN  &kp GREATER_THAN  &kp RIGHT_BRACE        &none     &vi_switch_window  &kp LC(U)  &kp UP_ARROW  &kp LC(D)  &none
&kp LEFT_PARENTHESIS  &kp BACKSLASH  &kp MINUS         &kp RIGHT_PARENTHESIS  &none     &none              &kp LEFT   &kp DOWN      &kp RIGHT  &kp RIGHT_SHIFT
&kp LEFT_BRACKET      &kp PIPE       &kp UNDERSCORE    &kp RIGHT_BRACKET      &none     &tmux_switcher     &none      &none         &none      &trans
                                                       &trans                 &trans    &trans             &trans
            >;
        };

        numeric {
            bindings = <
&none   &kp N7  &kp N8  &kp N9  &none     &kp CARET     &kp HASH         &kp AT      &kp AMPERSAND      &kp TILDE
&none   &kp N4  &kp N5  &kp N6  &none     &kp PLUS      &kp APOS         &kp DOLLAR  &kp DOUBLE_QUOTES  &kp EQUAL
&kp N0  &kp N1  &kp N2  &kp N3  &none     &kp ASTERISK  &kp EXCLAMATION  &kp GRAVE   &kp PERCENT        &kp SLASH
                        &trans  &trans    &trans        &trans
            >;
        };

        function {
            bindings = <
&none  &none  &none  &none  &none    &kp F1   &kp F2   &kp F3  &kp F4  &kp F5
&none  &none  &none  &none  &none    &kp F6   &kp F7   &kp F8  &kp F9  &kp F10
&none  &none  &none  &none  &none    &kp F11  &kp F12  &none   &none   &none
                     &none  &none    &none    &none
            >;
        };

        system {
            bindings = <
&sys_reset    &trans        &trans        &trans  &trans        &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  &trans  &trans        &trans  &trans  &trans  &trans  &trans
                                          &trans  &trans        &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        function_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
